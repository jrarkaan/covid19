{"version":3,"sources":["components/Cards/Card.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyDate","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","atl","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d0751e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3iqk-\",\"card\":\"Card_card__175ph\",\"infected\":\"Card_infected__16Pai\",\"recovered\":\"Card_recovered__1OW-9\",\"deaths\":\"Card_deaths__3m8FW\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n// importing style\r\nimport styles from './Card.module.css';\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} })=>{\r\n  if(!confirmed){\r\n    return 'Loading...';\r\n  }\r\n  return(\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)} >\r\n          <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={confirmed.value}\r\n              duration={2.5}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)} >\r\n          <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={recovered.value}\r\n              duration={2.5}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)} >\r\n          <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n          <Typography variant=\"h5\">\r\n          <CountUp\r\n            start={0}\r\n            end={deaths.value}\r\n            duration={2.5}\r\n            separator=\",\"\r\n          />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","\r\nimport axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async(country) =>{\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try{\r\n    const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed: confirmed,\r\n      recovered: recovered,\r\n      deaths: deaths,\r\n      lastUpdate: lastUpdate\r\n    }\r\n    return modifiedData;\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n  try{\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map( (dailyData)=>({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  }catch(error){\r\n    //console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async()=>{\r\n  try{\r\n    const {data: { countries }} = await axios.get(`${url}/countries`);\r\n    return countries.map((country)=> country.name);\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// importing file\r\nimport { fetchDailyData } from '../../api/index.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n//importing styles\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data, country})=>{\r\n  const [dailyData, setDailyDate] = useState({});\r\n  useEffect(()=>{\r\n    const fetchApi = async()=>{\r\n      setDailyDate(await fetchDailyData());\r\n    }\r\n    fetchApi();\r\n  },[]);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n      ? (\r\n        <Line\r\n          data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: 'Infected',\r\n              borderColor: '#3333ff',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: 'Deaths',\r\n              borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n              fill: true,\r\n            }],\r\n          }}\r\n        />\r\n    ) : null\r\n  );\r\n  console.log(data.confirmed, data.recovered, data.deaths);\r\n  const barChart = (\r\n    data.confirmed\r\n      ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor:[\r\n                'rgba(0, 0, 255, 0.5)',\r\n                'rgba(0, 255, 0, 0.5)',\r\n                'rgba(255, 0, 0, 0.5)'\r\n              ],\r\n              data: [data.confirmed.value, data.recovered.value, data.deaths.value]\r\n            }]\r\n          }}\r\n          options={{\r\n            legend: {display: false},\r\n            title: {display: true, text:`Current state in ${country}`},\r\n          }}\r\n\r\n        />\r\n      ) : null\r\n  )\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, {Component, useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n//importing styles css\r\nimport styles from './CountryPicker.module.css';\r\n//importing filess\r\nimport { fetchCountries } from '../../api/index.js';\r\n\r\n\r\nconst CountryPicker = ({ handleCountryChange })=>{\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchAPI = async()=>{\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  //console.log(fetchedCountries);\r\n  return(\r\n    <FormControl className={styles.FormControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country,i)=>(\r\n          <option key={i} value={country}>{country}</option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from 'react';\r\n// importing files\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport { fetchData } from './api/index';\r\n// importing file css\r\nimport styles from './App.module.css';\r\n//import image\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  handleCountryChange = async(country)=>{\r\n    console.log(country);\r\n    // fetch the data\r\n    const fetchedData = await fetchData(country);\r\n    console.log(fetchedData);\r\n    // set the state\r\n    this.setState({\r\n      data: fetchedData,\r\n      country: country\r\n    });\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData});\r\n  }\r\n  render(){\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} atl=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// importing files\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2A-7F\",\"image\":\"App_image__2z92t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__fbnfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__bEsmt\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}